pipeline {
    agent any

    tools {
        nodejs "nodejs"
    }

    stages {
        stage('Install Dependencies') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                }
            }
        }

        stage('Run Jest Tests') {
            steps {
                script {
                    dir('frontend') {
                        sh 'npm run test -- --watchAll=false'
                    }
             }
        }

        stage('Run Cypress Tests') {
	        agent {
		        docker {
			        image 'cypress/included:9.7.0'
			        args '-v $CYPRESS_CACHE_FOLDER:/cache/Cypress'
		        }
		        steps {
			        sh 'npx cypress run'
		        }
		        post {
			        always {
				        archiveArtifacts artifacts: 'cypress/screenshots/ ** , cypress/videos/ ** ', allowEmptyArchive: true
			        }
			        failure {
				        echo 'Cypress tests failed'
    			    }
		        }	
	        }
        }

        stage('Run Locust Load Tests') {
            steps {
                script {
                    // Use a Python image to install Locust and run tests
                    docker.image('python:3.8-slim').inside {
                        sh 'pip install locust'
                        dir('frontend') {
                            sh 'locust -f locustfile.py --headless -u 10 -r 2 --run-time 1m --host=http://localhost'
                        }
                    }
                }
            }
        }
    }
}
